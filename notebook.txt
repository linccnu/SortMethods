# python ftp website, which can open in browser and can download by wget tool
https://www.python.org/ftp/python/

# install pip or pip3
sudo apt-get install python-pip    #for pip
sudo apt-get install python3-pip   #for pip3
sudo pip3 list

# install java/jdk environment
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer  # while continue a long time, waiting...

# check jdk environment
java -version
javac -version

# set jdk environment path in ~/.bashrc, then source ~/.bashrc
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
export PATH=${JAVA_HOME}/bin:$PATH

# download pycharm-community software
http://www.jetbrains.com/pycharm/download/
sudo tar -xzvf pycharm-community-2018.2.4.tar.gz
sudo mv pycharm-community-2018.2.4 /usr/local/lib
sudo ln -s /usr/local/lib/pycharm-community-2018.2.4/bin/pycharm.sh /usr/bin/pycharm-community

# Using the third source to install pycharm-community
sudo add-apt-repository ppa:mystic-mirage/pycharm
sudo apt-get update
sudo apt-get install pycharm-community
# You can also download pycharm-community software in following website, and install it off-line
http://www.jetbrains.com/pycharm/download/#section=linux


------------------------------------------------
dpkg -i **.deb  #dpkg install *** software
dpkg -r **.deb  #dpkg remove  *** software

# install anaconda
https://blog.csdn.net/qq_22080019/article/details/80249114

===========================install nvidia driver and cuda and cudnn version for GTX 960===================
# list your driver infomation
lspci  | grep -i vga

# list the driver version, csdn web link:https://blog.csdn.net/MD2017/article/details/79039490
ubuntu-drivers devices
result as following:
zhonglin@B85M-D3V-A:~/Downloads$ ubuntu-drivers devices
== /sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0 ==
vendor   : NVIDIA Corporation
modalias : pci:v000010DEd00001401sv00001B4Csd0000116Fbc03sc00i00
driver   : xserver-xorg-video-nouveau - distro free builtin
driver   : nvidia-384 - distro non-free recommended

sudo apt-get install nvidia-384
sudo nvidia-smi
sudo watch -n 1 nvidia-smi
sudo cat /proc/driver/nvidia/version

# before installed, check the environment
lspci | grep -i nvidia
uname -m && cat /etc/*release
gcc --version
uname -r
sudo apt-get install linux-headers-$(uname -r)


https://www.cnblogs.com/zengcv/p/6564517.html
https://www.cnblogs.com/jinggege/p/5766146.html
https://developer.nvidia.com/cuda-gpus


https://developer.nvidia.com/rdp/cudnn-archive
for GTX960, Compute Capability is 5.2, we download cudnn 5.x # web-link refre to https://developer.nvidia.com/cuda-gpus
https://developer.nvidia.com/cuda-toolkit-archive
for GTX960,


note: if you can not enter graphic destop, using alt+ctrl+F1 to enter, then install NVIDIA Driver again.


===================================install docker and nvidia-docker==============================================
# install docker
sudo apt-get install wget
sudo wget -qO- https://get.docker.com/ |sh   #O is upper alphabet
note: If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:
    sudo usermod -aG docker zhonglin
# Test docker
sudo service docker start
sudo docker run hello-world

# install nvidia-docker
sudo curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
sudo curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update
sudo apt-get install -y nvidia-docker2
sudo reboot
done!

# some command about docker and nvidia-docker
sudo docker images                                                          #list docker images
sudo docker load --input ccf_facerecognition.rar                            #load docker image
sudo docker save -o ccf_facerecognition.rar ccf_facerecognition:latest      #save docker image
sudo nvidia-docker build -t ccf_facerecognition .                           #using Dockerfile to generate image

sudo nvidia-docker run -p 8888:8888 -p 6006:6006 -v /home/zhonglin/workspace:/data -itd --name tensorflow ufoym/deepo:tensorflow-py36  /bin/bash

# some website link
https://blog.csdn.net/xiangxianghehe/article/details/81216424
https://blog.csdn.net/cdknight_happy/article/details/80819413
https://github.com/NVIDIA/nvidia-docker                 #!!!!!!!!!!!!

===============================docker images in github============================================
https://github.com/ufoym/deepo                          #recommendation. It contains almost all the training frame you want.
https://hub.docker.com/r/tensorflow/tensorflow/tags/
https://github.com/matterport/Mask_RCNN
https://hub.docker.com/r/waleedka/modern-deep-learning/

===============================docker images in github============================================
https://github.com/ufoym/deepo                          #recommendation. It contains almost all the training frame you want.
https://hub.docker.com/r/tensorflow/tensorflow/tags/

ImportError: No module named '_tkinter'
sudo apt-get install python3-tk

# set java environment
export JAVA_HOME=/opt/java/jdk1.8
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
export PATH=${JAVA_HOME}/bin:$PATH


update-alternatives --config java

# anaconda download website
https://blog.csdn.net/lijiecong/article/details/78339078
http://docs.anaconda.com/anaconda/install/linux/
https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/
$bash ~/Anaconda3-2.3.0-Linux-x86_64.sh       ------python3.4.3


# nvidia images with cuda and cudnn versions
https://gitlab.com/nvidia/cuda/
https://hub.docker.com/r/library/ubuntu/


# some useful git command
git branch -d branch_name                   # delete local branch
git push origin --delete branch_name        # delete remote branch
git reset HEAD [files]